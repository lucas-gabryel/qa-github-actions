name: pipeline

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Baixar dependências do Maven
        run: mvn dependency:go-offline --batch-mode

      - name: Build do projeto
        run: mvn clean compile --batch-mode

      - name: Armazenar arquivos de build
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .

  healthcheck:
    name: Health Check
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Restaurar arquivos de build
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .

      - name: Executar teste de Health Check
        run: mvn test -Dgroups=HealthCheck

      - name: Salvar resultados de teste de Health Check
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-health-check
          path: ./allure-results

  contract:
    name: Contrato
    needs: healthcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Restaurar arquivos de build
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .

      - name: Executar teste de Contrato
        run: mvn test -Dgroups=Contract

      - name: Salvar resultados de teste de Contrato
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-contrato
          path: ./allure-results

  funcional:
    name: Funcional
    needs: contract
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Restaurar arquivos de build
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .

      - name: Executar testes Funcionais
        run: mvn test -Dgroups=Functional

      - name: Salvar resultados de teste Funcional
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-funcional
          path: ./allure-results

  relatorio:
    name: Relatório
    needs: [build, healthcheck, contract, funcional]
    if: always()
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Restaurar arquivos de build
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .

      - name: Baixar resultados dos testes de Health Check
        uses: actions/download-artifact@v4
        if: success() || failure()
        continue-on-error: true
        with:
          name: allure-results-health-check
          path: target/allure-results

      - name: Baixar resultados dos testes de Contrato
        uses: actions/download-artifact@v4
        if: success() || failure()
        continue-on-error: true
        with:
          name: allure-results-contrato
          path: target/allure-results

      - name: Baixar resultados dos testes Funcionais
        uses: actions/download-artifact@v4
        if: success() || failure()
        continue-on-error: true
        with:
          name: allure-results-funcional
          path: target/allure-results

      - name: Instalar Allure
        run: |
          sudo apt update
          sudo apt install -y allure

      - name: Carregar histórico de report
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Construir report de teste
        uses: simple-elf/allure-report-action@v1.7
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: target/allure-results

      - name: Publicar report
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_PAT }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Esperar atualizar no GitHub Pages
        run: sleep 30

      - name: Enviar mensagem no Discord com dados do Allure
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          REPO_NAME: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          STATUS: ${{ job.status }}

        run: |
          REPORT_URL="https://lucas-gabryel.github.io/qa-github-actions/"
          MESSAGE="🚀 **Testes finalizados!**\n🔹 **Status:** $STATUS\n🔹 **Branch:** $BRANCH\n🔹 **Relatório:** [Clique aqui]($REPORT_URL)"
          
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"username\": \"GitHub Actions\", \"content\": \"$MESSAGE\"}" \
               $DISCORD_WEBHOOK